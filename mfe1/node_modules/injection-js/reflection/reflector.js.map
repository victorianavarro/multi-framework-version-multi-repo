{"version":3,"file":"reflector.js","sourceRoot":"","sources":["../../lib/reflection/reflector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAMrD;;;GAGG;AACH,MAAM,OAAO,SAAU,SAAQ,eAAe;IAC5C,YAAmB,sBAAsD;QACvE,KAAK,EAAE,CAAC;QADS,2BAAsB,GAAtB,sBAAsB,CAAgC;IAEzE,CAAC;IAED,kBAAkB,CAAC,IAAoC;QACrD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,IAAe;QACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,UAAqB;QAC9B,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC;IAED,WAAW,CAAC,UAAqB;QAC/B,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC7D,CAAC;IAED,YAAY,CAAC,UAAqB;QAChC,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IAC9D,CAAC;IAED,gBAAgB,CAAC,IAAS,EAAE,UAAkB;QAC5C,OAAO,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,SAAS,CAAC,IAAS;QACjB,OAAO,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,WAAW,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,iBAAiB,CAAC,IAAY,EAAE,SAAiB,EAAE,OAAwB,EAAE,OAAY;QACvF,OAAO,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1F,CAAC;IAED,WAAW,CAAC,UAAe,EAAE,IAAY;QACvC,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Type } from '../facade/type';\nimport { PlatformReflectionCapabilities } from './platform_reflection_capabilities';\nimport { ReflectorReader } from './reflector_reader';\nimport { GetterFn, MethodFn, SetterFn } from './types';\n\nexport { PlatformReflectionCapabilities } from './platform_reflection_capabilities';\nexport { GetterFn, MethodFn, SetterFn } from './types';\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector extends ReflectorReader {\n  constructor(public reflectionCapabilities: PlatformReflectionCapabilities) {\n    super();\n  }\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) {\n    this.reflectionCapabilities = caps;\n  }\n\n  factory(type: Type<any>): Function {\n    return this.reflectionCapabilities.factory(type);\n  }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  propMetadata(typeOrFunc: Type<any>): { [key: string]: any[] } {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  getter(name: string): GetterFn {\n    return this.reflectionCapabilities.getter(name);\n  }\n\n  setter(name: string): SetterFn {\n    return this.reflectionCapabilities.setter(name);\n  }\n\n  method(name: string): MethodFn {\n    return this.reflectionCapabilities.method(name);\n  }\n\n  importUri(type: any): string {\n    return this.reflectionCapabilities.importUri(type);\n  }\n\n  resourceUri(type: any): string {\n    return this.reflectionCapabilities.resourceUri(type);\n  }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[] | null, runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n"]}